//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PictionaryMusicalCliente.PictionaryServidorServicioAmigos {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PictionaryServidorServicioAmigos.IAmigosManejador", CallbackContract=typeof(PictionaryMusicalCliente.PictionaryServidorServicioAmigos.IAmigosManejadorCallback))]
    public interface IAmigosManejador {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/Suscribir", ReplyAction="http://tempuri.org/IAmigosManejador/SuscribirResponse")]
        void Suscribir(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/Suscribir", ReplyAction="http://tempuri.org/IAmigosManejador/SuscribirResponse")]
        System.Threading.Tasks.Task SuscribirAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/CancelarSuscripcion", ReplyAction="http://tempuri.org/IAmigosManejador/CancelarSuscripcionResponse")]
        void CancelarSuscripcion(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/CancelarSuscripcion", ReplyAction="http://tempuri.org/IAmigosManejador/CancelarSuscripcionResponse")]
        System.Threading.Tasks.Task CancelarSuscripcionAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/EnviarSolicitudAmistad", ReplyAction="http://tempuri.org/IAmigosManejador/EnviarSolicitudAmistadResponse")]
        void EnviarSolicitudAmistad(string nombreUsuarioEmisor, string nombreUsuarioReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/EnviarSolicitudAmistad", ReplyAction="http://tempuri.org/IAmigosManejador/EnviarSolicitudAmistadResponse")]
        System.Threading.Tasks.Task EnviarSolicitudAmistadAsync(string nombreUsuarioEmisor, string nombreUsuarioReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/ResponderSolicitudAmistad", ReplyAction="http://tempuri.org/IAmigosManejador/ResponderSolicitudAmistadResponse")]
        void ResponderSolicitudAmistad(string nombreUsuarioEmisor, string nombreUsuarioReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/ResponderSolicitudAmistad", ReplyAction="http://tempuri.org/IAmigosManejador/ResponderSolicitudAmistadResponse")]
        System.Threading.Tasks.Task ResponderSolicitudAmistadAsync(string nombreUsuarioEmisor, string nombreUsuarioReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/EliminarAmigo", ReplyAction="http://tempuri.org/IAmigosManejador/EliminarAmigoResponse")]
        void EliminarAmigo(string nombreUsuarioA, string nombreUsuarioB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosManejador/EliminarAmigo", ReplyAction="http://tempuri.org/IAmigosManejador/EliminarAmigoResponse")]
        System.Threading.Tasks.Task EliminarAmigoAsync(string nombreUsuarioA, string nombreUsuarioB);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAmigosManejadorCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAmigosManejador/SolicitudActualizada")]
        void SolicitudActualizada(global::Servicios.Contratos.DTOs.SolicitudAmistadDTO solicitud);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAmigosManejador/AmistadEliminada")]
        void AmistadEliminada(global::Servicios.Contratos.DTOs.SolicitudAmistadDTO solicitud);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAmigosManejadorChannel : PictionaryMusicalCliente.PictionaryServidorServicioAmigos.IAmigosManejador, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AmigosManejadorClient : System.ServiceModel.DuplexClientBase<PictionaryMusicalCliente.PictionaryServidorServicioAmigos.IAmigosManejador>, PictionaryMusicalCliente.PictionaryServidorServicioAmigos.IAmigosManejador {
        
        public AmigosManejadorClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AmigosManejadorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AmigosManejadorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AmigosManejadorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AmigosManejadorClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Suscribir(string nombreUsuario) {
            base.Channel.Suscribir(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task SuscribirAsync(string nombreUsuario) {
            return base.Channel.SuscribirAsync(nombreUsuario);
        }
        
        public void CancelarSuscripcion(string nombreUsuario) {
            base.Channel.CancelarSuscripcion(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task CancelarSuscripcionAsync(string nombreUsuario) {
            return base.Channel.CancelarSuscripcionAsync(nombreUsuario);
        }
        
        public void EnviarSolicitudAmistad(string nombreUsuarioEmisor, string nombreUsuarioReceptor) {
            base.Channel.EnviarSolicitudAmistad(nombreUsuarioEmisor, nombreUsuarioReceptor);
        }
        
        public System.Threading.Tasks.Task EnviarSolicitudAmistadAsync(string nombreUsuarioEmisor, string nombreUsuarioReceptor) {
            return base.Channel.EnviarSolicitudAmistadAsync(nombreUsuarioEmisor, nombreUsuarioReceptor);
        }
        
        public void ResponderSolicitudAmistad(string nombreUsuarioEmisor, string nombreUsuarioReceptor) {
            base.Channel.ResponderSolicitudAmistad(nombreUsuarioEmisor, nombreUsuarioReceptor);
        }
        
        public System.Threading.Tasks.Task ResponderSolicitudAmistadAsync(string nombreUsuarioEmisor, string nombreUsuarioReceptor) {
            return base.Channel.ResponderSolicitudAmistadAsync(nombreUsuarioEmisor, nombreUsuarioReceptor);
        }
        
        public void EliminarAmigo(string nombreUsuarioA, string nombreUsuarioB) {
            base.Channel.EliminarAmigo(nombreUsuarioA, nombreUsuarioB);
        }
        
        public System.Threading.Tasks.Task EliminarAmigoAsync(string nombreUsuarioA, string nombreUsuarioB) {
            return base.Channel.EliminarAmigoAsync(nombreUsuarioA, nombreUsuarioB);
        }
    }
}
